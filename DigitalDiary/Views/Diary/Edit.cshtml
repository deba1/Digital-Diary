@model DigitalDiary.Models.Diary

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Diary", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Diary</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Importance, "Importance", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Importance", String.Empty)
                @Html.ValidationMessageFor(model => model.Importance)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="text-box single-line form-control" data-val="true" data-val-date="The field Date must be a date." data-val-required="The Date field is required." id="Date" name="Date" type="date" value="@Model.Date.ToString("yyyy-MM-dd")">
                @Html.ValidationMessageFor(model => model.Date)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Note, new { @class = "form-control", rows = "5" })
                @Html.ValidationMessageFor(model => model.Note)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (@Html.DisplayFor(model => model.Image).ToString() != "")
                {
                    <ul class="media-list thumbnail" style="display:inline-block;padding:7px" id="prevFile">
                        <li class="media">
                            <span class="pull-left">
                                <img class="media-object" src="/Content/Images/@Html.DisplayFor(model => model.Image)" alt="*" id="prevImage" style="height:64px"/>
                            </span>
                            <div class="media-body">
                                <div class="btn-group btn-group-sm">
                                    <button type="button" class="btn btn-danger" title="Remove" onclick="clearFile()">⨉</button>
                                </div>
                                
                            </div>
                        </li>
                    </ul>
                    <div class="form-control" style="width:250px;display:none" id="inputFile">
                        <input type="file" name="ImageFile" id="ImageFile" style="opacity:0;z-index:2;position:relative" onchange="updateFile(this.value)" />
                        <span style="position:relative;top:-22px;z-index:0" id="fileName">Choose File...</span>
                        <span style="display:none">@Html.EditorFor(model => model.Image)</span>
                        @Html.ValidationMessageFor(model => model.Image)
                    </div>
                }
                else
                {
                    <div class="form-control" style="width:250px" id="inputFile">
                        <input type="file" name="ImageFile" id="ImageFile" style="opacity:0;z-index:2;position:relative" onchange="updateFile(this.value)" />
                        <span style="position:relative;top:-22px;z-index:0" id="fileName">Choose File...</span>
                        <span style="display:none">@Html.EditorFor(model => model.Image)</span>
                        @Html.ValidationMessageFor(model => model.Image)
                    </div>
                }
                
                    <script>
                        function updateFile(val) {
                            var idx = val.lastIndexOf("\\")+1;
                            var filename = val.substring(idx);
                            document.getElementById("fileName").innerHTML = filename;/*
                            var reader = new FileReader();
                            reader.onload = function (e) {
                                document.getElementById("prevImage").setAttribute("src", e.target.result);
                            }
                            reader.readAsDataURL(val);
                            document.getElementById("prevFile").setAttribute("style", "display:inline-block");*/
                        }
                        function clearFile() {
                            document.getElementById("Image").value = "";
                            document.getElementById("prevFile").setAttribute("style", "display:none");
                            document.getElementById("inputFile").setAttribute("style", "width:250px;display:block");
                        }
                    </script>
                </div>
        </div>

        <input type="hidden" name="LastModification" value="@System.DateTime.Now.ToString()" />
        @Html.ValidationMessageFor(model => model.LastModification)

        <input type="hidden" name="UserId" value="@Session["user_id"].ToString()" />
        @Html.ValidationMessageFor(model => model.UserId)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
